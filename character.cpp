//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////
//	Project title:	Hunt the Wumpus
//	Class:			CSS 342
//	Professor:		John Chenault
//	Created by:		Ye Eun (Audrey) Chae
//	Platform:		MacOS Sierra 10.12.6
//	Environment:	VIM / g++ -std=c++11
//	Date Created:	November 30, 2017
//	Duration:		20 hours
//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

#include "character.h"
#include <iostream>
using namespace std;


Character::Character(){
	dead = false;
	arrowCount = 4;
	yRow = 0;
	xCol = 0;
}

Character::~Character(){
	//tbd
}

void Character::setName(string namey){
	name = namey;
}
void Character::setLocation(int row, int col){
	yRow = row;
	xCol = col;
}

//////////////////////////////////////////////////////////////////////////////
//	shootArrow()	The method that decreases the count of arrows
//					kills the character if arrows = 0... :( 
//////////////////////////////////////////////////////////////////////////////
bool Character::shootArrow(){
	arrowCount--;
	if(arrowCount == 0){
		return false;
	}
	else{
		return true;
	}
}

//////////////////////////////////////////////////////////////////////////////
//	die() - sets dead to true. YOU'RE DONE. 
//////////////////////////////////////////////////////////////////////////////
void Character::die(){
	dead = true;
}
string Character::getName(){
	return name;
}
//////////////////////////////////////////////////////////////////////////////
//	getArrowCount() returns the number of arrows left for that character
//////////////////////////////////////////////////////////////////////////////
int Character::getArrowCount(){
	return arrowCount;
}

//////////////////////////////////////////////////////////////////////////////
//	getRow()	returns the current row number
//////////////////////////////////////////////////////////////////////////////
int Character::getRow(){
	return yRow;
}

//////////////////////////////////////////////////////////////////////////////
//	getCol()	returns current column number
//////////////////////////////////////////////////////////////////////////////
int Character::getCol(){
	return xCol;
}
//////////////////////////////////////////////////////////////////////////////
//	amiDead()	returns true if character is dead *see death rules* 
//////////////////////////////////////////////////////////////////////////////
bool Character::amiDead(){
	return dead;
}
//////////////////////////////////////////////////////////////////////////////
//	move()	takes in user's step and moves coordinates accordingly 
//////////////////////////////////////////////////////////////////////////////
void Character::move(char step){
	switch (step){
		//i = UP
		case 'i':
			yRow--;
			return;

		//j = LEFT
		case 'j':
			xCol--;
			return;

		//l = RIGHT
		case 'l':
			xCol++;
			return;

		//m = DOWN
		case 'm':
			yRow++;
			return;
		case '%': //wanna quit game
			dead = true;
			return;
		default:
			std::cout << "Not a valid step :(" << endl;	
			return;
	}
}


